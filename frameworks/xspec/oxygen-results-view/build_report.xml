
<!-- ===================================================================== -->
<!--                OXYGEN XSPEC REPORT VIEW PATCH                         -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->


<project name="xspec report" default="xspec" xmlns:if="ant:if" xmlns:unless="ant:unless">
  
  <import file="../build.xml"/>
  
    <!-- ================================== -->
    <!-- 
    OXYGEN XSPEC REPORT VIEW PATCH START 
   
     -->
    <!-- ================================== -->
  <property name="saxon.custom.options" value=""/>
  <property name="compile.xspec.xsl.driver" value="${xspec.project.dir}/oxygen-results-view/compile-driver.xsl" />
  <property name="ext.xspec.compiled.runner" value="${xspec.compiled.runner.without.ext}-original.xsl" />
  
  <property name="xspec.template.name.entrypoint" value="" />
	
  <property name="xspec.saxon.config" value="${xspec.project.dir}/oxygen-results-view/saxon-config.xml" />
  <property name="xspec.saxon.config.jar" value="${xspec.project.dir}/oxygen-results-view/saxon-extension.jar" />
	
  
  <!-- Performs XSLT using Saxon with common parameters including catalog -->
  <macrodef name="apply-saxon-xslt">
    <attribute name="in" />
    <attribute name="out" />
    <attribute name="style" />
    
    <element name="args" optional="true" />
    
    <sequential>
      
      <java classname="net.sf.saxon.Transform"
        fork="false" failonerror="true">
        <classpath>
          <pathelement path="${java.class.path}"/>
          <pathelement path="${xspec.saxon.config.jar}"/>
        </classpath>
        
        
        <arg value="-s:@{in}" />
        <arg value="-o:@{out}" />
        <arg value="-xsl:@{style}" />
        
        <arg value="-catalog:${xspec.catalog.url}" if:set="catalog" />
        <arg line="${saxon.custom.options}"/>
        
        <arg value="-ext:on" />
        <arg value="-config:${xspec.saxon.config}" />
        
        <args/>
        
      </java>
      
    </sequential>
  </macrodef>
  
  <!-- ================================== -->
  <!-- OXYGEN XSPEC REPORT VIEW PATCH END -->
  <!-- ================================== -->  
  
  
  <!-- ================================== -->
  <!-- OXYGEN XSPEC REPORT VIEW PATCH START-->
  <!-- ================================== -->  
  
  
  <target name="compile" depends="init, preprocess-schematron-xspec">
    <condition property="xspec.compiler.xsl"
        value="generate-query-tests.xsl"
        else="generate-xspec-tests.xsl">
        <istrue value="${xspec.is.xquery}" />
    </condition>
    
    <echo message="Compiling Tests..."
        level="info" />
    
	<!-- 
      Use a custom compiler : ext.xspec.compiler.xsl
      
      We do this because we want to:
      - control the scenario-to-template ID generation so we can request a specific scenario to run.
      The ID is generated by com.oxygenxml.xspec.saxon.GenerateIDExtensionFunction. This way, from 
      both the compile XSLTs and the plugin's Java code we get the same IDs.
  	    
  	-->
          
    <echo>Step 1. Compile the XSPEC into an XSLT</echo>
    <apply-saxon-xslt in="${xspec.xspecfile.preprocessed}" out="${ext.xspec.compiled.runner}" style="${ext.xspec.compiler.xsl}"/>
    
    <!-- 

  	  	    Oxygen XSpec Report View Patch Start 
  	  	    
      This step is required in case the user requested some specific scenarios to be run.
      It does that though the xspec.template.name.entrypoint parameter
  	-->
    
    <echo>Step 2. Create the Driver XSLT</echo>
    <echo>Apply driver to execute the templates: ${xspec.template.name.entrypoint}</echo>
    
    <makeurl file="${ext.xspec.compiled.runner}" property="xspec.xsl.uri"/>
    
    <apply-saxon-xslt in="${xspec.xspecfile.preprocessed}" out="${xspec.compiled.runner}" style="${compile.xspec.xsl.driver}">
      <args>
        <arg value="xspec.template.name.entrypoint=${xspec.template.name.entrypoint}" />
        <arg value="compiled-stylesheet-uri=${xspec.xsl.uri}" />
      </args>
    </apply-saxon-xslt>
  </target>
  
  <!-- ================================== -->
  <!-- OXYGEN XSPEC REPORT VIEW PATCH END -->
  <!-- ================================== -->  




</project>